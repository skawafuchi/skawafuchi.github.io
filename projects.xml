<?xml version="1.0" encoding="UTF-8"?>
<projects_list>

	<project name="JKT">
		<name>JKT</name>
		<short_description>Game designed and created for students studying
			Japanese. Flexibility was kept in mind so they could create their own
			vocabulary lists to load into the game
		</short_description>
		<full_description>Game designed and created for students studying
			Japanese Kanji. Flexibility was kept in mind so they could create
			their own vocabulary lists to load into the game. Players can select
			from three different difficulty levels, and the game can be used for
			other languages as well.
		</full_description>
		<members>
			<member role="Designer and Programmer">Steven Kawafuchi</member>
		</members>

		<time_frame>
			<start_date>
				<day>DAY</day>
				<month>February</month>
				<year>2015</year>
			</start_date>
			<end_date>
				<day>DAY</day>
				<month>On</month>
				<year>Going</year>
			</end_date>
		</time_frame>

		<urls>
			<project_url>jkt.html</project_url>
			<picture_url>images/JKT 3000 Screenshot</picture_url>
			<thumbnail_url>images/thumbnails/JKT 3000 Thumbnail.png
			</thumbnail_url>
			<github_url>GITHUB URL</github_url>
			<download_url>DL URL</download_url>
		</urls>

		<tags>
			<tag type="filter">Game</tag>
			<tag type="technology">Java</tag>
			<tag type="technology">Eclipse</tag>
		</tags>
	</project>

	<project name="Chirpper">
		<name>Chirpper</name>
		<short_description>Audio version of Twitter web application developed
			for an informatics project class at UCI.
		</short_description>
		<full_description>Audio version of Twitter web application developed
			for an informatics project class at UCI. Project was developed in C#
			using Unity to develop the front end and Java to develop the server
			which was hosted on Heroku. The server connected with AWS S3 to store
			all of the audio files and used a PostgreSQL database in order to
			store user information.
		</full_description>
		<note>Server is disconnected from AWS S3 at the moment. No audio files
			will be stored or can be played.
		</note>
		<members>
			<member role="Server Programmer; Assisted Front-End">Steven Kawafuchi</member>
			<member role="Front-End Programmer">Mari Rann</member>
		</members>

		<time_frame>
			<start_date>
				<day>DAY</day>
				<month>April</month>
				<year>2015</year>
			</start_date>
			<end_date>
				<day>DAY</day>
				<month>June</month>
				<year>2015</year>
			</end_date>
		</time_frame>
		<urls>
			<project_url>chirpper.html</project_url>
			<github_url>https://github.com/MsRann/Chirpper</github_url>
			<download_url>https://github.com/MsRann/Chirpper/archive/master.zip
			</download_url>
			<play_url>play/Chirpper.html</play_url>
			<picture_url>images/Chirpper Screenshot.png</picture_url>
			<thumbnail_url>images/thumbnails/Chirpper Thumbnail.png
			</thumbnail_url>
		</urls>
		<tags>
			<tag type="filter">Website</tag>
			<tag type="technology">C#</tag>
			<tag type="technology">Unity 3D</tag>
			<tag type="technology">Java</tag>
			<tag type="technology">PostgreSQL</tag>
			<tag type="technology">Heroku</tag>
			<tag type="technology">AWS S3</tag>
			<tag type="technology">Eclipse</tag>
		</tags>
	</project>

	<project name="Bubble Bubble Pop Pop">
		<name>Bubble Bubble Pop Pop</name>
		<short_description>Bubble popping game that used various technologies
			to allow for multi-touch interaction.
		</short_description>
		<full_description>
			The input was gathered using a Logitech c270 camera with certain
			brightness and contrast values adjusted to interface to the Community
			Core Vision software.
			The camera was placed into a cardboard box and put under a frame with a
			piece of paper in it in order to allow touch interaction.
			From there the image threshold, blob size, blur, noise, and amplify
			values were adjusted appropriately only recieve inputs from fingers
			touching the frame through CCV.
			The game was created in Eclipse using Java and MT4J. 
			This was the first time I used MT4J so I had to look up tutorials and example programs in order to get a better understanding of it and learn how to properly add touch interaction. 
			As described in the video, the game revolves around blowing up bubbles by using a zooming action in the bubble in order to blow them up to a point of popping them. 
			Once a bubble is popped, the game increases the difficulty as described in the video. RunPopDemBubbles.java extends the MTApplication class and initializes the window and starts up the 
			BubbleScene where the game is run. The BubbleScene.java creates a MTApplication where it creates all the basic UI elements to the game such as the description of the game,
			how to play it, the score and lives of the player and game over text when the player loses. 
			These textfields had their gesture listeners removed in order to prevent the player from moving and interacting with them while the game is running.
		The GameThread.java uses a timer to do various events such as shrinking the bubble over time as well as creating bubbles when appropriate. 
			The game checks every 20ms to see if the bubble is small enough to make the player lose a life. 
			Every 1.5 seconds there is another timer event that adds bubbles if the difficulty allows it. 
			The game uses a CopyOnWriteArrayList in order to avoid ConcurrentModificationExceptions that occured during initial gameplay when destroying bubbles when a player popped them, or when it popped from shrinking. 
			Every bubble is a MTEllipse that has all its inherit gesture listeners removed and a single ZoomProcessor attached to it which checks the size of the bubble, sets the color, and increases score when appropriate.
			Upon losing the game the timer stops and all bubbles are removed from the scene in order to prevent players from continuing to play.
		
		</full_description>
		<members>
			<member role="Designer and Programmer">Steven Kawafuchi</member>
		</members>

		<time_frame>
			<start_date>
				<day>DAY</day>
				<month>November</month>
				<year>2014</year>
			</start_date>
			<end_date>
				<day>DAY</day>
				<month>December</month>
				<year>2014</year>
			</end_date>
		</time_frame>

		<urls>

			<project_url>bubblebubblepoppop.html</project_url>
			<github_url>https://github.com/skawafuchi/Bubble-Bubble-Pop-Pop
			</github_url>
			<download_url>https://github.com/skawafuchi/Bubble-Bubble-Pop-Pop/archive/master.zip
			</download_url>
			<picture_url>images/Bubble Bubble Pop Pop Screenshot.png
			</picture_url>
			<thumbnail_url>images/thumbnails/Bubble Bubble Pop Pop Thumbnail.png
			</thumbnail_url>
			<youtube_url>IzrRnMsqLw4</youtube_url>
		</urls>

		<tags>
			<tag type="filter">Game</tag>
			<tag type="technology">CCV</tag>
			<tag type="technology">Eclipse</tag>
			<tag type="technology">MT4J</tag>
		</tags>
	</project>


	<project name="Guardians of the Arena">
		<name>Guardians of the Arena</name>
		<short_description>Networked turn-based strategy game developed over
			two quarters at UCI. Was a finalist at the 2015 IEEE GameSig Showcase
		</short_description>
		<full_description>Networked turn-based strategy game developed over
			two quarters at UCI. Worked together and discussed various aspects of
			game design and gameplay with each other. The team received advice
			from mentors from Blizzard Entertainment about game mechanics. The
			team was able to sit down with various playtesters and receive
			feedback to improve the game. Guardians of the Arena was a finalist
			at the 2015 IEEE GameSig Showcase.
		</full_description>
		<members>
			<member role="Designer and Client-Side Programmer">Steven Kawafuchi</member>
			<member role="Producer, Designer, AI/UI Programmer">Joey Shepard</member>
			<member role="Network Programmer, Database Admin">Daniel Tenorio</member>
			<member role="Graphics and Setup Screen Programmer">Jordan Hua</member>
			<member role="Sound Artist">Chris German</member>
		</members>

		<time_frame>
			<start_date>
				<day>DAY</day>
				<month>October</month>
				<year>2014</year>
			</start_date>
			<end_date>
				<day>DAY</day>
				<month>March</month>
				<year>2015</year>
			</end_date>
		</time_frame>

		<urls>

			<project_url>gota.html</project_url>
			<play_url>play/gota.html</play_url>
			<github_url>https://github.com/JordanLingHua/projectH</github_url>
			<download_url>https://github.com/JordanLingHua/projectH/archive/master.zip
			</download_url>
			<picture_url>images/GotA Screenshot.png</picture_url>
			<thumbnail_url>images/thumbnails/GotA Thumbnail.png
			</thumbnail_url>
			<youtube_url>HWdZ8sP5Sss</youtube_url>
		</urls>

		<tags>
			<tag type="filter">Game</tag>
			<tag type="technology">C#</tag>
			<tag type="technology">Unity 3D</tag>
			<tag type="technology">Visual Studio</tag>
		</tags>
	</project>

	<project name="Bazinga Z">
		<name>Bazinga Z</name>
		<short_description>Mobile shooter game designed that was ranked top of
			the class
		</short_description>
		<full_description>A mobile 2D Side-Scrolling Shooter and Tap and Swipe
			Battle game set in space! All team members contributed to the GDD and
			attended weekly meetings about the game's design. Our instructor,
			Craig Holland of FreezeTag Games, and his friend, David Daniels of
			Mogol Games, assigned a rank to each of the 10 pitches. Bazinga Z was
			#1!
		</full_description>
		<members>
			<member>Steven Kawafuchi</member>
			<member>Tamara Sahagun</member>
			<member>Mari Rann</member>
			<member>Elson Chin</member>
			<member>Jonathan Shokoor</member>
		</members>

		<time_frame>
			<start_date>
				<day>DAY</day>
				<month>September</month>
				<year>2013</year>
			</start_date>
			<end_date>
				<day>DAY</day>
				<month>December</month>
				<year>2013</year>
			</end_date>
		</time_frame>
		<urls>
			<project_url>bazingaz.html</project_url>
			<play_url>https://prezi.com/1n2xznnrnabs/bazinga-z-presentation/
			</play_url>
			<picture_url>images/Bazinga Z Screenshot.png</picture_url>
			<thumbnail_url>images/thumbnails/Bazinga Z Thumbnail.png
			</thumbnail_url>
		</urls>
		<tags>
			<tag type="filter">Game</tag>
			<tag type="technology">Google Docs</tag>
			<tag type="technology">Prezi</tag>
		</tags>
	</project>

	<project name="This Website!">
		<name>This Website!</name>
		<short_description>Website created to link to and display all my
			projects as well as learn some new languages
		</short_description>
		<full_description>Website created to showcase various projects that I
			have completed over the years. The website attempts to be flexible
			and adjust to mobile platforms. Bootstrap was used to create aspects
			such as the carousel on the home page and navigation bar. Javascript
			was used to load information to pages from an XML file, as well as
			make the page more responsive.
		</full_description>
		<members>
			<member role="Designer and Programmer">Steven Kawafuchi</member>
		</members>

		<time_frame>
			<start_date>
				<day>DAY</day>
				<month>September</month>
				<year>2015</year>
			</start_date>
			<end_date>
				<day>DAY</day>
				<month>On</month>
				<year>Going</year>
			</end_date>
		</time_frame>

		<urls>
			<github_url>https://github.com/skawafuchi/skawafuchi.github.io
			</github_url>
			<download_url>https://github.com/skawafuchi/skawafuchi.github.io/archive/master.zip
			</download_url>
			<project_url>thiswebsite.html</project_url>
			<picture_url>images/Website Screenshot.pngL</picture_url>
			<thumbnail_url>images/thumbnails/Website Thumbnail.png
			</thumbnail_url>
		</urls>
		<tags>
			<tag type="filter">Website</tag>
			<tag type="technology">Javascript</tag>
			<tag type="technology">JQuery</tag>
			<tag type="technology">Bootstrap</tag>
			<tag type="technology">XML</tag>
			<tag type="technology">CSS</tag>
			<tag type="technology">HTML</tag>
		</tags>
	</project>

</projects_list>